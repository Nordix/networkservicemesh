ARG VENDORING
ARG GOPROXY
ARG GO_VERSION

FROM golang:${GO_VERSION}-alpine as build

ENV GOPROXY=${GOPROXY}
ENV PACKAGEPATH=github.com/networkservicemesh/networkservicemesh/forwarder
ENV GO111MODULE=on

RUN mkdir /root/networkservicemesh
ADD ["./networkservicemesh","/root/networkservicemesh"]
WORKDIR /root/networkservicemesh/forwarder
RUN VENDORING=${VENDORING} ../scripts/go-mod-download.sh


# ////////////// Open vSwitch Section ////////////// #

# Build ovs-forwarder

RUN CGO_ENABLED=0 GOOS=linux go build ${VENDORING} -ldflags "-extldflags '-static'" -o /go/bin/ovs-forwarder ./ovs-forwarder/cmd/ovs-forwarder.go

FROM alpine as runtime
COPY --from=build /go/bin/ovs-forwarder /bin/ovs-forwarder
RUN apk --update add supervisor \
                     openvswitch


# Add configuration files
ADD run_supervisord.sh /bin/run_supervisord.sh
ADD supervisord.conf /etc/supervisord.conf
RUN chmod +x /bin/run_supervisord.sh

# When container starts, run_supervisord.sh is executed
ENTRYPOINT ["/bin/run_supervisord.sh"]

